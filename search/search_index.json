{"config":{"lang":["zh"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"AKShare One","text":"\u4e2d\u56fd\u91d1\u878d\u5e02\u573a\u6570\u636e\u7684\u6807\u51c6\u5316\u63a5\u53e3 <p>\u57fa\u4e8e AKShare \u6784\u5efa\uff0c\u63d0\u4f9b\u7edf\u4e00\u7684\u6570\u636e\u683c\u5f0f\u548c\u7b80\u5316\u7684 API</p>"},{"location":"#_1","title":"\u2728 \u7279\u6027","text":"<ul> <li>\ud83d\udcca \u7edf\u4e00\u7684\u80a1\u7968\u4ee3\u7801\u683c\u5f0f - \u8de8\u6570\u636e\u6e90\u7684\u4e00\u81f4\u6027\u4f53\u9a8c</li> <li>\ud83c\udfd7\ufe0f \u6807\u51c6\u5316\u6570\u636e\u7ed3\u6784 - \u7edf\u4e00\u7684\u8fd4\u56de\u683c\u5f0f\uff0c\u4fbf\u4e8e\u6570\u636e\u5904\u7406</li> <li>\ud83d\udee0\ufe0f \u7b80\u5316\u7684 API \u8bbe\u8ba1 - \u51cf\u5c11\u53c2\u6570\u590d\u6742\u6027\uff0c\u63d0\u9ad8\u6613\u7528\u6027</li> <li>\ud83d\udd27 \u4e30\u5bcc\u7684\u6280\u672f\u6307\u6807 - \u5185\u7f6e\u5e38\u7528\u6280\u672f\u5206\u6790\u6307\u6807</li> <li>\ud83d\ude80 \u9ad8\u6027\u80fd\u7f13\u5b58 - \u5229\u7528\u7f13\u5b58\u673a\u5236\uff0c\u63d0\u5347\u6570\u636e\u83b7\u53d6\u6548\u7387</li> </ul>"},{"location":"#_2","title":"\ud83d\ude80 \u6838\u5fc3\u529f\u80fd","text":"\u529f\u80fd\u6a21\u5757 \u63a5\u53e3\u51fd\u6570 \u63cf\u8ff0 \u5386\u53f2\u6570\u636e <code>get_hist_data()</code> \u83b7\u53d6\u80a1\u7968\u5386\u53f2\u884c\u60c5\u6570\u636e \u5b9e\u65f6\u6570\u636e <code>get_realtime_data()</code> \u83b7\u53d6\u80a1\u7968\u5b9e\u65f6\u884c\u60c5\u6570\u636e \u57fa\u7840\u4fe1\u606f <code>get_basic_info()</code> \u83b7\u53d6\u80a1\u7968\u57fa\u7840\u4fe1\u606f \u65b0\u95fb\u6570\u636e <code>get_news_data()</code> \u83b7\u53d6\u4e2a\u80a1\u65b0\u95fb\u6570\u636e \u8d22\u52a1\u6570\u636e <code>get_balance_sheet()</code> \u83b7\u53d6\u8d44\u4ea7\u8d1f\u503a\u8868\u6570\u636e \u8d22\u52a1\u6570\u636e <code>get_income_statement()</code> \u83b7\u53d6\u5229\u6da6\u8868\u6570\u636e \u8d22\u52a1\u6570\u636e <code>get_cash_flow()</code> \u83b7\u53d6\u73b0\u91d1\u6d41\u91cf\u8868\u6570\u636e \u8d22\u52a1\u6570\u636e <code>get_financial_metrics()</code> \u83b7\u53d6\u8d22\u52a1\u5173\u952e\u6307\u6807 \u5185\u90e8\u4ea4\u6613 <code>get_inner_trade_data()</code> \u83b7\u53d6\u5185\u90e8\u4ea4\u6613\u6570\u636e \u6280\u672f\u6307\u6807 indicators \u6a21\u5757 \u4e30\u5bcc\u7684\u6280\u672f\u5206\u6790\u6307\u6807"},{"location":"#_3","title":"\ud83d\udce6 \u5b89\u88c5","text":""},{"location":"#_4","title":"\u57fa\u7840\u5b89\u88c5","text":"<pre><code>pip install akshare-one\n</code></pre>"},{"location":"#ta-lib","title":"\u5b8c\u6574\u5b89\u88c5\uff08\u5305\u542b TA-Lib \u6280\u672f\u6307\u6807\uff09","text":"<pre><code>pip install akshare-one[talib]\n</code></pre> <p>TA-Lib \u5b89\u88c5\u8bf4\u660e</p> <p>\u5982\u9700\u4f7f\u7528 TA-Lib \u8ba1\u7b97\u5668\uff0c\u8bf7\u5148\u5b89\u88c5 TA-Lib \u5e93\u3002\u8be6\u7ec6\u5b89\u88c5\u8bf4\u660e\u8bf7\u53c2\u8003 TA-Lib \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"#_5","title":"\ud83d\udcbb \u5feb\u901f\u5f00\u59cb","text":""},{"location":"#_6","title":"\u83b7\u53d6\u5386\u53f2\u6570\u636e","text":"<pre><code>from akshare_one import get_hist_data\n\n# \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u524d\u590d\u6743\u65e5\u7ebf\u6570\u636e\ndf = get_hist_data(\n    symbol=\"600000\",\n    interval=\"day\",\n    adjust=\"qfq\",\n    start_date=\"2024-01-01\",\n    end_date=\"2024-03-31\"\n)\nprint(df.head())\n</code></pre>"},{"location":"#_7","title":"\u83b7\u53d6\u5b9e\u65f6\u6570\u636e","text":"<pre><code>from akshare_one import get_realtime_data\n\n# \u83b7\u53d6\u5355\u53ea\u80a1\u7968\u5b9e\u65f6\u6570\u636e\ndf = get_realtime_data(symbol=\"600000\")\nprint(df)\n</code></pre>"},{"location":"#_8","title":"\u8ba1\u7b97\u6280\u672f\u6307\u6807","text":"<pre><code>from akshare_one import get_hist_data\nfrom akshare_one.indicators import get_sma, get_macd\n\n# \u83b7\u53d6\u5386\u53f2\u6570\u636e\ndf = get_hist_data(symbol=\"600000\", interval=\"day\")\n\n# \u8ba1\u7b9720\u65e5\u7b80\u5355\u79fb\u52a8\u5e73\u5747\ndf_sma = get_sma(df, window=20)\n\n# \u8ba1\u7b97MACD\u6307\u6807\ndf_macd = get_macd(df)\n</code></pre>"},{"location":"#_9","title":"\ud83d\udcda \u6587\u6863\u5bfc\u822a","text":"<ul> <li>\u5feb\u901f\u5f00\u59cb - \u8be6\u7ec6\u7684\u5b89\u88c5\u548c\u4f7f\u7528\u6307\u5357</li> <li>API \u53c2\u8003 - \u5b8c\u6574\u7684 API \u6587\u6863</li> <li>\u793a\u4f8b\u4ee3\u7801 - \u5b9e\u7528\u7684\u4ee3\u7801\u793a\u4f8b</li> </ul>"},{"location":"#_10","title":"\ud83e\udd1d \u8d21\u732e","text":"<p>\u6b22\u8fce\u63d0\u4ea4 Issue \u548c Pull Request \u6765\u5e2e\u52a9\u6539\u8fdb AKShare One\uff01</p>"},{"location":"#_11","title":"\ud83d\udcc4 \u8bb8\u53ef\u8bc1","text":"<p>\u672c\u9879\u76ee\u91c7\u7528 MIT \u8bb8\u53ef\u8bc1 - \u8be6\u89c1 LICENSE \u6587\u4ef6\u3002</p>"},{"location":"#_12","title":"\ud83d\udd17 \u76f8\u5173\u94fe\u63a5","text":"<ul> <li>GitHub \u4ed3\u5e93</li> <li>PyPI \u5305</li> <li>AKShare \u539f\u9879\u76ee</li> <li>AKShare One MCP</li> </ul>"},{"location":"examples/","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u672c\u9875\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5b9e\u7528\u7684\u4ee3\u7801\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 AKShare One \u8fdb\u884c\u5e38\u89c1\u7684\u6570\u636e\u5206\u6790\u4efb\u52a1\u3002</p>"},{"location":"examples/#1","title":"1. \u6279\u91cf\u83b7\u53d6\u591a\u53ea\u80a1\u7968\u7684\u5b9e\u65f6\u884c\u60c5","text":"<pre><code>import pandas as pd\nfrom akshare_one import get_realtime_data\n\ndef get_batch_realtime_data(symbols):\n    \"\"\"\n    \u6279\u91cf\u83b7\u53d6\u591a\u53ea\u80a1\u7968\u7684\u5b9e\u65f6\u884c\u60c5\u6570\u636e\n    \"\"\"\n    all_data = []\n    for symbol in symbols:\n        try:\n            df = get_realtime_data(symbol=symbol, source=\"eastmoney\")\n            if not df.empty:\n                all_data.append(df)\n        except Exception as e:\n            print(f\"\u83b7\u53d6 {symbol} \u6570\u636e\u5931\u8d25: {e}\")\n\n    if not all_data:\n        return pd.DataFrame()\n\n    return pd.concat(all_data, ignore_index=True)\n\n# \u80a1\u7968\u5217\u8868\nstock_list = [\"600000\", \"000001\", \"600519\", \"000858\", \"300750\"]\n\n# \u83b7\u53d6\u6570\u636e\nrealtime_df = get_batch_realtime_data(stock_list)\nprint(realtime_df)\n</code></pre>"},{"location":"examples/#2","title":"2. \u8ba1\u7b97\u5e76\u7ed8\u5236\u80a1\u7968\u7684\u79fb\u52a8\u5e73\u5747\u7ebf","text":"<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\nfrom akshare_one import get_hist_data\nfrom akshare_one.indicators import get_sma\n\n# \u83b7\u53d6\u5386\u53f2\u6570\u636e\nsymbol = \"600036\"\nhist_df = get_hist_data(symbol=symbol, start_date=\"2023-01-01\", adjust=\"qfq\")\n\nif not hist_df.empty:\n    # \u8ba1\u7b975\u65e5\u300120\u65e5\u548c60\u65e5\u79fb\u52a8\u5e73\u5747\u7ebf\n    sma_5 = get_sma(hist_df, window=5)\n    sma_20 = get_sma(hist_df, window=20)\n    sma_60 = get_sma(hist_df, window=60)\n\n    # \u7ed8\u5236\u56fe\u8868\n    plt.figure(figsize=(15, 8))\n    plt.plot(hist_df['timestamp'], hist_df['close'], label='Close Price')\n    plt.plot(hist_df['timestamp'], sma_5, label='SMA 5')\n    plt.plot(hist_df['timestamp'], sma_20, label='SMA 20')\n    plt.plot(hist_df['timestamp'], sma_60, label='SMA 60')\n\n    plt.title(f'{symbol} - Moving Averages')\n    plt.xlabel('Date')\n    plt.ylabel('Price')\n    plt.legend()\n    plt.grid(True)\n    plt.show()\n</code></pre>"},{"location":"quickstart/","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u672c\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u5feb\u901f\u5b89\u88c5\u548c\u4f7f\u7528 AKShare One\u3002</p>"},{"location":"quickstart/#_2","title":"\u5b89\u88c5","text":""},{"location":"quickstart/#_3","title":"\u57fa\u7840\u5b89\u88c5","text":"<pre><code>pip install akshare-one\n</code></pre>"},{"location":"quickstart/#ta-lib","title":"\u5b8c\u6574\u5b89\u88c5\uff08\u5305\u542b TA-Lib \u6280\u672f\u6307\u6807\uff09","text":"<pre><code>pip install akshare-one[talib]\n</code></pre> <p>TA-Lib \u5b89\u88c5\u8bf4\u660e</p> <p>\u5982\u9700\u4f7f\u7528 TA-Lib \u8ba1\u7b97\u5668\uff0c\u8bf7\u5148\u5b89\u88c5 TA-Lib \u5e93\u3002\u8be6\u7ec6\u5b89\u88c5\u8bf4\u660e\u8bf7\u53c2\u8003 TA-Lib \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"quickstart/#_4","title":"\u57fa\u672c\u7528\u6cd5","text":""},{"location":"quickstart/#_5","title":"\u5bfc\u5165\u6a21\u5757","text":"<pre><code>from akshare_one import (\n    get_hist_data,\n    get_realtime_data,\n    get_basic_info,\n    get_news_data,\n    get_balance_sheet,\n    get_income_statement,\n    get_cash_flow,\n    get_financial_metrics,\n    get_inner_trade_data\n)\n\nfrom akshare_one.indicators import (\n    get_sma, get_ema, get_rsi, get_macd, get_bollinger_bands\n)\n</code></pre>"},{"location":"quickstart/#_6","title":"\u83b7\u53d6\u5386\u53f2\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u524d\u590d\u6743\u65e5\u7ebf\u6570\u636e\ndf = get_hist_data(\n    symbol=\"600000\",\n    interval=\"day\",\n    adjust=\"qfq\",\n    start_date=\"2024-01-01\",\n    end_date=\"2024-03-31\"\n)\nprint(df.head())\n</code></pre>"},{"location":"quickstart/#_7","title":"\u83b7\u53d6\u5b9e\u65f6\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u5355\u53ea\u80a1\u7968\u5b9e\u65f6\u6570\u636e\ndf = get_realtime_data(symbol=\"600000\")\nprint(df)\n</code></pre>"},{"location":"quickstart/#_8","title":"\u83b7\u53d6\u8d22\u52a1\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u8d44\u4ea7\u8d1f\u503a\u8868\nbalance_sheet = get_balance_sheet(symbol=\"600000\")\n\n# \u83b7\u53d6\u5229\u6da6\u8868\nincome_statement = get_income_statement(symbol=\"600000\")\n\n# \u83b7\u53d6\u73b0\u91d1\u6d41\u91cf\u8868\ncash_flow = get_cash_flow(symbol=\"600000\")\n</code></pre>"},{"location":"quickstart/#_9","title":"\u8ba1\u7b97\u6280\u672f\u6307\u6807","text":"<pre><code># \u8ba1\u7b9720\u65e5\u7b80\u5355\u79fb\u52a8\u5e73\u5747\ndf_sma = get_sma(df, window=20)\n\n# \u8ba1\u7b97MACD\u6307\u6807\ndf_macd = get_macd(df)\n</code></pre>"},{"location":"quickstart/#_10","title":"\u914d\u7f6e\u9009\u9879","text":""},{"location":"quickstart/#_11","title":"\u8bbe\u7f6e\u7f13\u5b58","text":"<p>AKShare One \u9ed8\u8ba4\u542f\u7528\u7f13\u5b58\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u7f13\u5b58\u884c\u4e3a\uff1a</p> <pre><code>import os\n\n# \u7981\u7528\u7f13\u5b58\nos.environ[\"AKSHARE_ONE_CACHE_ENABLED\"] = \"False\"\n</code></pre>"},{"location":"quickstart/#_12","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>\u67e5\u770b\u5b8c\u6574\u7684 API \u53c2\u8003</li> <li>\u5b66\u4e60 \u793a\u4f8b\u4ee3\u7801</li> </ul>"},{"location":"api/basic-info/","title":"\u57fa\u7840\u4fe1\u606f","text":"<p><code>get_basic_info()</code> \u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u80a1\u7968\u57fa\u7840\u4fe1\u606f\u3002</p>"},{"location":"api/basic-info/#_2","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_basic_info(symbol, **kwargs) -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/basic-info/#_3","title":"\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>symbol</code> str \u662f - \u80a1\u7968\u4ee3\u7801(\u5982: \"600000\") <code>source</code> str \u5426 \"eastmoney\" \u6570\u636e\u6e90(\u76ee\u524d\u4ec5\u652f\u6301\"eastmoney\")"},{"location":"api/basic-info/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de <code>pandas.DataFrame</code>\uff0c\u5305\u542b\u4ee5\u4e0b\u5217\uff1a</p> \u5217\u540d \u7c7b\u578b \u63cf\u8ff0 <code>symbol</code> str \u80a1\u7968\u4ee3\u7801 <code>name</code> str \u80a1\u7968\u7b80\u79f0 <code>price</code> float \u6700\u65b0\u4ef7 <code>total_shares</code> float \u603b\u80a1\u672c(\u4e07\u80a1) <code>float_shares</code> float \u6d41\u901a\u80a1(\u4e07\u80a1) <code>total_market_cap</code> float \u603b\u5e02\u503c(\u4ebf\u5143) <code>float_market_cap</code> float \u6d41\u901a\u5e02\u503c(\u4ebf\u5143) <code>industry</code> str \u6240\u5c5e\u884c\u4e1a <code>listing_date</code> datetime \u4e0a\u5e02\u65e5\u671f"},{"location":"api/basic-info/#_5","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/basic-info/#_6","title":"\u83b7\u53d6\u5355\u53ea\u80a1\u7968\u57fa\u7840\u4fe1\u606f","text":"<pre><code>from akshare_one import get_basic_info\n\n# \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u57fa\u7840\u4fe1\u606f\ndf = get_basic_info(symbol=\"600000\")\nprint(df)\n\n# \u67e5\u770b\u5177\u4f53\u4fe1\u606f\nif not df.empty:\n    info = df.iloc[0]\n    print(f\"\u80a1\u7968\u540d\u79f0: {info['name']}\")\n    print(f\"\u6240\u5c5e\u884c\u4e1a: {info['industry']}\")\n    print(f\"\u603b\u5e02\u503c: {info['total_market_cap']} \u5143\")\n</code></pre>"},{"location":"api/financial/","title":"\u8d22\u52a1\u6570\u636e","text":"<p>AKShare One \u63d0\u4f9b\u591a\u4e2a\u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u4e0a\u5e02\u516c\u53f8\u8d22\u52a1\u6570\u636e\uff1a</p> <ol> <li><code>get_balance_sheet()</code> - \u83b7\u53d6\u8d44\u4ea7\u8d1f\u503a\u8868</li> <li><code>get_income_statement()</code> - \u83b7\u53d6\u5229\u6da6\u8868</li> <li><code>get_cash_flow()</code> - \u83b7\u53d6\u73b0\u91d1\u6d41\u91cf\u8868</li> <li><code>get_financial_metrics()</code> - \u83b7\u53d6\u8d22\u52a1\u5173\u952e\u6307\u6807</li> </ol>"},{"location":"api/financial/#_2","title":"\u901a\u7528\u53c2\u6570","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>symbol</code> str \u662f - \u80a1\u7968\u4ee3\u7801(\u5982: \"600000\") <code>source</code> str \u5426 \"sina\" \u6570\u636e\u6e90(\"sina\", \"eastmoney_direct\")"},{"location":"api/financial/#\u8d44\u4ea7\u8d1f\u503a\u8868","title":"\u8d44\u4ea7\u8d1f\u503a\u8868","text":""},{"location":"api/financial/#_3","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_balance_sheet(symbol: str, source: Literal[\"sina\"] = \"sina\") -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/financial/#_4","title":"\u8fd4\u56de\u503c\u5b57\u6bb5","text":"\u5b57\u6bb5\u540d \u63cf\u8ff0 <code>report_date</code> \u62a5\u544a\u65e5\u671f <code>currency</code> \u5e01\u79cd <code>total_assets</code> \u8d44\u4ea7\u603b\u8ba1 <code>current_assets</code> \u6d41\u52a8\u8d44\u4ea7\u5408\u8ba1 <code>cash_and_equivalents</code> \u8d27\u5e01\u8d44\u91d1 <code>inventory</code> \u5b58\u8d27 <code>current_investments</code> \u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7 <code>trade_and_non_trade_receivables</code> \u5e94\u6536\u7968\u636e\u53ca\u5e94\u6536\u8d26\u6b3e <code>non_current_assets</code> \u975e\u6d41\u52a8\u8d44\u4ea7\u5408\u8ba1 <code>property_plant_and_equipment</code> \u56fa\u5b9a\u8d44\u4ea7 <code>goodwill_and_intangible_assets</code> \u5546\u8a89 <code>investments</code> \u957f\u671f\u80a1\u6743\u6295\u8d44 <code>non_current_investments</code> \u5176\u4ed6\u975e\u6d41\u52a8\u91d1\u878d\u8d44\u4ea7 <code>outstanding_shares</code> \u5b9e\u6536\u8d44\u672c(\u6216\u80a1\u672c) <code>tax_assets</code> \u9012\u5ef6\u6240\u5f97\u7a0e\u8d44\u4ea7 <code>total_liabilities</code> \u8d1f\u503a\u5408\u8ba1 <code>current_liabilities</code> \u6d41\u52a8\u8d1f\u503a\u5408\u8ba1 <code>current_debt</code> \u77ed\u671f\u501f\u6b3e <code>trade_and_non_trade_payables</code> \u5e94\u4ed8\u7968\u636e\u53ca\u5e94\u4ed8\u8d26\u6b3e <code>deferred_revenue</code> \u5408\u540c\u8d1f\u503a <code>deposit_liabilities</code> \u5438\u6536\u5b58\u6b3e\u53ca\u540c\u4e1a\u5b58\u653e <code>non_current_liabilities</code> \u975e\u6d41\u52a8\u8d1f\u503a\u5408\u8ba1 <code>non_current_debt</code> \u957f\u671f\u501f\u6b3e <code>tax_liabilities</code> \u9012\u5ef6\u6240\u5f97\u7a0e\u8d1f\u503a <code>shareholders_equity</code> \u6240\u6709\u8005\u6743\u76ca(\u6216\u80a1\u4e1c\u6743\u76ca)\u5408\u8ba1 <code>retained_earnings</code> \u672a\u5206\u914d\u5229\u6da6 <code>accumulated_other_comprehensive_income</code> \u5176\u4ed6\u7efc\u5408\u6536\u76ca <code>accounts_receivable</code> \u5e94\u6536\u8d26\u6b3e <code>prepayments</code> \u9884\u4ed8\u6b3e\u9879 <code>other_receivables</code> \u5176\u4ed6\u5e94\u6536\u6b3e <code>fixed_assets_net</code> \u56fa\u5b9a\u8d44\u4ea7\u51c0\u503c <code>construction_in_progress</code> \u5728\u5efa\u5de5\u7a0b <code>capital_reserve</code> \u8d44\u672c\u516c\u79ef <code>current_ratio</code> \u6d41\u52a8\u6bd4\u7387 <code>debt_to_assets</code> \u8d44\u4ea7\u8d1f\u503a\u7387 <code>minority_interest</code> \u5c11\u6570\u80a1\u4e1c\u6743\u76ca"},{"location":"api/financial/#\u5229\u6da6\u8868","title":"\u5229\u6da6\u8868","text":""},{"location":"api/financial/#_5","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_income_statement(symbol: str, source: Literal[\"sina\"] = \"sina\") -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/financial/#_6","title":"\u8fd4\u56de\u503c\u5b57\u6bb5","text":"\u5b57\u6bb5\u540d \u63cf\u8ff0 <code>report_date</code> \u62a5\u544a\u65e5\u671f <code>currency</code> \u5e01\u79cd <code>revenue</code> \u8425\u4e1a\u603b\u6536\u5165 <code>operating_revenue</code> \u8425\u4e1a\u6536\u5165 <code>total_operating_costs</code> \u8425\u4e1a\u603b\u6210\u672c <code>cost_of_revenue</code> \u8425\u4e1a\u6210\u672c <code>operating_profit</code> \u8425\u4e1a\u5229\u6da6 <code>selling_general_and_administrative_expenses</code> \u9500\u552e\u8d39\u7528 <code>operating_expense</code> \u7ba1\u7406\u8d39\u7528 <code>research_and_development</code> \u7814\u53d1\u8d39\u7528 <code>interest_expense</code> \u5229\u606f\u652f\u51fa <code>ebit</code> \u5229\u6da6\u603b\u989d <code>income_tax_expense</code> \u6240\u5f97\u7a0e\u8d39\u7528 <code>net_income</code> \u51c0\u5229\u6da6 <code>net_income_common_stock</code> \u5f52\u5c5e\u4e8e\u6bcd\u516c\u53f8\u6240\u6709\u8005\u7684\u51c0\u5229\u6da6 <code>net_income_non_controlling_interests</code> \u5c11\u6570\u80a1\u4e1c\u635f\u76ca <code>earnings_per_share</code> \u57fa\u672c\u6bcf\u80a1\u6536\u76ca <code>earnings_per_share_diluted</code> \u7a00\u91ca\u6bcf\u80a1\u6536\u76ca <code>investment_income</code> \u6295\u8d44\u6536\u76ca <code>fair_value_adjustments</code> \u516c\u5141\u4ef7\u503c\u53d8\u52a8\u6536\u76ca <code>asset_impairment_loss</code> \u8d44\u4ea7\u51cf\u503c\u635f\u5931 <code>financial_expenses</code> \u8d22\u52a1\u8d39\u7528 <code>taxes_and_surcharges</code> \u8425\u4e1a\u7a0e\u91d1\u53ca\u9644\u52a0 <code>other_comprehensive_income</code> \u5176\u4ed6\u7efc\u5408\u6536\u76ca <code>total_comprehensive_income</code> \u7efc\u5408\u6536\u76ca\u603b\u989d"},{"location":"api/financial/#\u73b0\u91d1\u6d41\u91cf\u8868","title":"\u73b0\u91d1\u6d41\u91cf\u8868","text":""},{"location":"api/financial/#_7","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_cash_flow(symbol: str, source: Literal[\"sina\"] = \"sina\") -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/financial/#_8","title":"\u8fd4\u56de\u503c\u5b57\u6bb5","text":"\u5b57\u6bb5\u540d \u63cf\u8ff0 <code>report_date</code> \u62a5\u544a\u65e5\u671f <code>currency</code> \u5e01\u79cd <code>net_cash_flow_from_operations</code> \u7ecf\u8425\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u6d41\u91cf\u51c0\u989d <code>capital_expenditure</code> \u8d2d\u5efa\u56fa\u5b9a\u8d44\u4ea7\u3001\u65e0\u5f62\u8d44\u4ea7\u548c\u5176\u4ed6\u957f\u671f\u8d44\u4ea7\u652f\u4ed8\u7684\u73b0\u91d1 <code>business_acquisitions_and_disposals</code> \u53d6\u5f97\u5b50\u516c\u53f8\u53ca\u5176\u4ed6\u8425\u4e1a\u5355\u4f4d\u652f\u4ed8\u7684\u73b0\u91d1\u51c0\u989d <code>net_cash_flow_from_investing</code> \u6295\u8d44\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u6d41\u91cf\u51c0\u989d <code>issuance_or_repayment_of_debt_securities</code> \u53d6\u5f97\u501f\u6b3e\u6536\u5230\u7684\u73b0\u91d1 <code>issuance_or_purchase_of_equity_shares</code> \u5438\u6536\u6295\u8d44\u6536\u5230\u7684\u73b0\u91d1 <code>net_cash_flow_from_financing</code> \u7b79\u8d44\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u6d41\u91cf\u51c0\u989d <code>change_in_cash_and_equivalents</code> \u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\u51c0\u589e\u52a0\u989d <code>effect_of_exchange_rate_changes</code> \u6c47\u7387\u53d8\u52a8\u5bf9\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\u7684\u5f71\u54cd <code>ending_cash_balance</code> \u671f\u672b\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\u4f59\u989d <code>cash_from_sales</code> \u9500\u552e\u5546\u54c1\u3001\u63d0\u4f9b\u52b3\u52a1\u6536\u5230\u7684\u73b0\u91d1 <code>tax_refunds_received</code> \u6536\u5230\u7684\u7a0e\u8d39\u8fd4\u8fd8 <code>cash_paid_to_employees</code> \u652f\u4ed8\u7ed9\u804c\u5de5\u4ee5\u53ca\u4e3a\u804c\u5de5\u652f\u4ed8\u7684\u73b0\u91d1 <code>taxes_paid</code> \u652f\u4ed8\u7684\u5404\u9879\u7a0e\u8d39 <code>total_cash_inflow_from_operations</code> \u7ecf\u8425\u6d3b\u52a8\u73b0\u91d1\u6d41\u5165\u5c0f\u8ba1 <code>total_cash_outflow_from_operations</code> \u7ecf\u8425\u6d3b\u52a8\u73b0\u91d1\u6d41\u51fa\u5c0f\u8ba1 <code>cash_from_investment_recovery</code> \u6536\u56de\u6295\u8d44\u6240\u6536\u5230\u7684\u73b0\u91d1 <code>cash_from_investment_income</code> \u53d6\u5f97\u6295\u8d44\u6536\u76ca\u6536\u5230\u7684\u73b0\u91d1 <code>cash_from_asset_sales</code> \u5904\u7f6e\u56fa\u5b9a\u8d44\u4ea7\u3001\u65e0\u5f62\u8d44\u4ea7\u6536\u56de\u7684\u73b0\u91d1 <code>total_cash_inflow_from_investing</code> \u6295\u8d44\u6d3b\u52a8\u73b0\u91d1\u6d41\u5165\u5c0f\u8ba1 <code>total_cash_outflow_from_investing</code> \u6295\u8d44\u6d3b\u52a8\u73b0\u91d1\u6d41\u51fa\u5c0f\u8ba1 <code>cash_paid_for_dividends_and_interest</code> \u5206\u914d\u80a1\u5229\u3001\u5229\u6da6\u6216\u507f\u4ed8\u5229\u606f\u6240\u652f\u4ed8\u7684\u73b0\u91d1 <code>cash_paid_for_debt_repayment</code> \u507f\u8fd8\u503a\u52a1\u652f\u4ed8\u7684\u73b0\u91d1 <code>total_cash_inflow_from_financing</code> \u7b79\u8d44\u6d3b\u52a8\u73b0\u91d1\u6d41\u5165\u5c0f\u8ba1 <code>total_cash_outflow_from_financing</code> \u7b79\u8d44\u6d3b\u52a8\u73b0\u91d1\u6d41\u51fa\u5c0f\u8ba1 <code>beginning_cash_balance</code> \u671f\u521d\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\u4f59\u989d <code>ending_cash</code> \u73b0\u91d1\u7684\u671f\u672b\u4f59\u989d <code>ending_cash_equivalents</code> \u73b0\u91d1\u7b49\u4ef7\u7269\u7684\u671f\u672b\u4f59\u989d"},{"location":"api/financial/#\u8d22\u52a1\u5173\u952e\u6307\u6807","title":"\u8d22\u52a1\u5173\u952e\u6307\u6807","text":""},{"location":"api/financial/#_9","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_financial_metrics(symbol: str, source: Literal[\"eastmoney_direct\"] = \"eastmoney_direct\") -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/financial/#_10","title":"\u8fd4\u56de\u503c\u5b57\u6bb5","text":"\u5b57\u6bb5\u540d \u63cf\u8ff0 <code>report_date</code> \u62a5\u544a\u65e5\u671f <code>total_assets</code> \u8d44\u4ea7\u603b\u8ba1 <code>fixed_assets_net</code> \u56fa\u5b9a\u8d44\u4ea7\u51c0\u503c <code>cash_and_equivalents</code> \u8d27\u5e01\u8d44\u91d1 <code>accounts_receivable</code> \u5e94\u6536\u8d26\u6b3e <code>inventory</code> \u5b58\u8d27 <code>trade_and_non_trade_payables</code> \u5e94\u4ed8\u7968\u636e\u53ca\u5e94\u4ed8\u8d26\u6b3e <code>deferred_revenue</code> \u5408\u540c\u8d1f\u503a <code>total_liabilities</code> \u8d1f\u503a\u5408\u8ba1 <code>shareholders_equity</code> \u6240\u6709\u8005\u6743\u76ca <code>revenue</code> \u8425\u4e1a\u603b\u6536\u5165 <code>total_operating_costs</code> \u8425\u4e1a\u603b\u6210\u672c <code>operating_profit</code> \u8425\u4e1a\u5229\u6da6 <code>net_income_common_stock</code> \u5f52\u5c5e\u4e8e\u6bcd\u516c\u53f8\u6240\u6709\u8005\u7684\u51c0\u5229\u6da6 <code>net_cash_flow_from_operations</code> \u7ecf\u8425\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u6d41\u91cf\u51c0\u989d <code>net_cash_flow_from_investing</code> \u6295\u8d44\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u6d41\u91cf\u51c0\u989d <code>net_cash_flow_from_financing</code> \u7b79\u8d44\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u6d41\u91cf\u51c0\u989d <code>change_in_cash_and_equivalents</code> \u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\u51c0\u589e\u52a0\u989d"},{"location":"api/financial/#_11","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/financial/#_12","title":"\u83b7\u53d6\u8d44\u4ea7\u8d1f\u503a\u8868","text":"<pre><code>from akshare_one import get_balance_sheet\n\n# \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u8d44\u4ea7\u8d1f\u503a\u8868\ndf = get_balance_sheet(symbol=\"600000\")\nprint(df[[\"report_date\", \"total_assets\", \"total_liabilities\", \"shareholders_equity\"]])\n</code></pre>"},{"location":"api/financial/#_13","title":"\u83b7\u53d6\u5229\u6da6\u8868","text":"<pre><code>from akshare_one import get_income_statement\n\n# \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u5229\u6da6\u8868\ndf = get_income_statement(symbol=\"600000\")\nprint(df[[\"report_date\", \"revenue\", \"net_income_common_stock\"]])\n</code></pre>"},{"location":"api/financial/#_14","title":"\u83b7\u53d6\u73b0\u91d1\u6d41\u91cf\u8868","text":"<pre><code>from akshare_one import get_cash_flow\n\n# \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u73b0\u91d1\u6d41\u91cf\u8868\ndf = get_cash_flow(symbol=\"600000\")\nprint(df[[\"report_date\", \"net_cash_flow_from_operations\"]])\n</code></pre>"},{"location":"api/financial/#_15","title":"\u83b7\u53d6\u8d22\u52a1\u5173\u952e\u6307\u6807","text":"<pre><code>from akshare_one import get_financial_metrics\n\n# \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u8d22\u52a1\u5173\u952e\u6307\u6807\ndf_metrics = get_financial_metrics(symbol=\"600000\")\nprint(df_metrics.head())\n</code></pre>"},{"location":"api/historical/","title":"\u5386\u53f2\u6570\u636e","text":"<p><code>get_hist_data()</code> \u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u80a1\u7968\u5386\u53f2\u884c\u60c5\u6570\u636e\uff0c\u652f\u6301\u591a\u79cd\u65f6\u95f4\u7c92\u5ea6\u548c\u590d\u6743\u65b9\u5f0f\u3002</p>"},{"location":"api/historical/#_2","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_hist_data(symbol, **kwargs) -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/historical/#_3","title":"\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>symbol</code> str \u662f - \u80a1\u7968\u4ee3\u7801(\u5982: \"600000\") <code>interval</code> str \u5426 \"day\" \u65f6\u95f4\u7c92\u5ea6('minute','hour','day','week','month','year') <code>interval_multiplier</code> int \u5426 1 \u65f6\u95f4\u95f4\u9694\u500d\u6570 <code>start_date</code> str \u5426 \"1970-01-01\" \u5f00\u59cb\u65e5\u671f(YYYY-MM-DD) <code>end_date</code> str \u5426 \"2030-12-31\" \u7ed3\u675f\u65e5\u671f(YYYY-MM-DD) <code>adjust</code> str \u5426 \"none\" \u590d\u6743\u7c7b\u578b(\"none\",\"qfq\",\"hfq\") <code>source</code> str \u5426 \"eastmoney\" \u6570\u636e\u6e90(\"eastmoney\",\"eastmoney_direct\",\"sina\") <p>\u65f6\u95f4\u95f4\u9694\u8bf4\u660e</p> <p>\u5982\u679c <code>interval</code> \u4e3a 'minute'\uff0c\u5219 <code>interval_multiplier</code> \u8868\u793a\u5206\u949f\u6570\uff0c\u5982 5 \u8868\u793a 5 \u5206\u949f\u7ebf</p> <p>\u6570\u636e\u6e90\u7279\u6027</p> <ul> <li><code>eastmoney_direct</code> \u6570\u636e\u6e90\u652f\u6301\u6e2f\u80a1\uff0c\u5982 \"00700\" \u8868\u793a\u817e\u8baf\u63a7\u80a1</li> <li><code>eastmoney_direct</code> \u6570\u636e\u6e90\u7684\u5c0f\u65f6\u548c\u5206\u949f\u7ea7\u6570\u636e\u53ea\u652f\u6301\u5f53\u524d\u4ea4\u6613\u65e5</li> <li>\u4e0d\u540c\u6570\u636e\u6e90\u7684\u6570\u636e\u8986\u76d6\u8303\u56f4\u53ef\u80fd\u6709\u6240\u5dee\u5f02</li> </ul>"},{"location":"api/historical/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de <code>pandas.DataFrame</code>\uff0c\u5305\u542b\u4ee5\u4e0b\u5217\uff1a</p> \u5217\u540d \u7c7b\u578b \u63cf\u8ff0 <code>timestamp</code> datetime \u65f6\u95f4\u6233 <code>open</code> float \u5f00\u76d8\u4ef7 <code>high</code> float \u6700\u9ad8\u4ef7 <code>low</code> float \u6700\u4f4e\u4ef7 <code>close</code> float \u6536\u76d8\u4ef7 <code>volume</code> int \u6210\u4ea4\u91cf"},{"location":"api/historical/#_5","title":"\u590d\u6743\u7c7b\u578b\u8bf4\u660e","text":"\u590d\u6743\u7c7b\u578b \u6807\u8bc6\u7b26 \u8bf4\u660e \u4e0d\u590d\u6743 <code>none</code> \u539f\u59cb\u4ef7\u683c\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u8c03\u6574 \u524d\u590d\u6743 <code>qfq</code> \u4ee5\u5f53\u524d\u4ef7\u683c\u4e3a\u57fa\u51c6\u5411\u524d\u8c03\u6574\u5386\u53f2\u4ef7\u683c \u540e\u590d\u6743 <code>hfq</code> \u4ee5\u5386\u53f2\u4ef7\u683c\u4e3a\u57fa\u51c6\u5411\u540e\u8c03\u6574\u5f53\u524d\u4ef7\u683c"},{"location":"api/historical/#_6","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/historical/#_7","title":"\u57fa\u7840\u7528\u6cd5","text":"<pre><code>from akshare_one import get_hist_data\n\n# \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u65e5\u7ebf\u6570\u636e\ndf = get_hist_data(symbol=\"600000\")\nprint(df.head())\n</code></pre>"},{"location":"api/historical/#_8","title":"\u83b7\u53d6\u524d\u590d\u6743\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u524d\u590d\u6743\u65e5\u7ebf\u6570\u636e\ndf = get_hist_data(\n    symbol=\"600000\",\n    interval=\"day\",\n    adjust=\"qfq\",\n    start_date=\"2024-01-01\",\n    end_date=\"2024-03-31\"\n)\nprint(f\"\u6570\u636e\u6761\u6570: {len(df)}\")\nprint(df.head())\n</code></pre>"},{"location":"api/historical/#_9","title":"\u83b7\u53d6\u5206\u949f\u7ea7\u6570\u636e","text":"<pre><code># \u83b7\u53d65\u5206\u949f\u7ebf\u6570\u636e\uff08\u4ec5\u5f53\u524d\u4ea4\u6613\u65e5\uff09\ndf = get_hist_data(\n    symbol=\"600000\",\n    interval=\"minute\",\n    interval_multiplier=5,\n    source=\"eastmoney_direct\"\n)\nprint(df.tail())\n</code></pre>"},{"location":"api/historical/#_10","title":"\u83b7\u53d6\u6e2f\u80a1\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u817e\u8baf\u63a7\u80a1\u6e2f\u80a1\u6570\u636e\ndf = get_hist_data(\n    symbol=\"00700\",\n    interval=\"day\",\n    source=\"eastmoney_direct\",\n    start_date=\"2024-01-01\"\n)\nprint(df.head())\n</code></pre>"},{"location":"api/historical/#_11","title":"\u83b7\u53d6\u5468\u7ebf\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u5468\u7ebf\u6570\u636e\ndf = get_hist_data(\n    symbol=\"600000\",\n    interval=\"week\",\n    start_date=\"2023-01-01\",\n    end_date=\"2024-01-01\"\n)\nprint(df.head())\n</code></pre>"},{"location":"api/indicators/","title":"\u6280\u672f\u6307\u6807","text":"<p>\u6280\u672f\u6307\u6807\u6a21\u5757\u63d0\u4f9b\u5e38\u89c1\u7684\u6280\u672f\u5206\u6790\u6307\u6807\u8ba1\u7b97\u529f\u80fd\uff0c\u9700\u8981\u901a\u8fc7<code>akshare_one.indicators</code>\u6a21\u5757\u8c03\u7528\uff1a</p> <pre><code>from akshare_one.indicators import (\n    get_sma, get_ema, get_rsi, get_macd, get_bollinger_bands, get_stoch, get_atr,\n    get_cci, get_adx, get_willr, get_ad, get_adosc, get_obv, get_mom, get_sar,\n    get_tsf, get_apo, get_aroon, get_aroonosc, get_bop, get_cmo, get_dx, get_mfi,\n    get_minus_di, get_minus_dm, get_plus_di, get_plus_dm, get_ppo, get_roc,\n    get_rocp, get_rocr, get_rocr100, get_trix, get_ultosc\n)\n</code></pre> <p>Note</p> <ul> <li><code>simple</code>\u8ba1\u7b97\u65b9\u5f0f\u652f\u6301\u4ee5\u4e0b\u6307\u6807: SMA, EMA, RSI, MACD, Bollinger Bands, Stochastic, ATR, CCI, ADX</li> <li>\u5176\u4ed6\u6307\u6807\u4ec5\u652f\u6301<code>talib</code>\u8ba1\u7b97\u65b9\u5f0f\uff0c\u9700\u8981\u989d\u5916\u5b89\u88c5TA-Lib\u4f9d\u8d56\u5e76\u4f7f\u7528<code>pip install akshare-one[talib]</code>\u5b89\u88c5</li> </ul> <ul> <li>\u7b80\u5355\u79fb\u52a8\u5e73\u5747\u7ebf(SMA): <code>get_sma(df, window=20, calculator_type=\"talib\")</code></li> <li>\u6307\u6570\u79fb\u52a8\u5e73\u5747\u7ebf(EMA): <code>get_ema(df, window=20, calculator_type=\"talib\")</code></li> <li>\u76f8\u5bf9\u5f3a\u5f31\u6307\u6570(RSI): <code>get_rsi(df, window=14, calculator_type=\"talib\")</code></li> <li>\u79fb\u52a8\u5e73\u5747\u6536\u655b\u53d1\u6563\u6307\u6807(MACD): <code>get_macd(df, fast=12, slow=26, signal=9, calculator_type=\"talib\")</code></li> <li>\u5e03\u6797\u5e26(Bollinger Bands): <code>get_bollinger_bands(df, window=20, std=2, calculator_type=\"talib\")</code></li> <li>\u968f\u673a\u6307\u6807(Stochastic Oscillator): <code>get_stoch(df, window=14, smooth_d=3, smooth_k=3, calculator_type=\"talib\")</code></li> <li>\u5e73\u5747\u771f\u5b9e\u6ce2\u5e45(ATR): <code>get_atr(df, window=14, calculator_type=\"talib\")</code></li> <li>\u5546\u54c1\u901a\u9053\u6307\u6570(CCI): <code>get_cci(df, window=14, calculator_type=\"talib\")</code></li> <li>\u5e73\u5747\u65b9\u5411\u6027\u6307\u6807(ADX): <code>get_adx(df, window=14, calculator_type=\"talib\")</code></li> <li>\u5a01\u5ec9\u6307\u6807(Williams' %R): <code>get_willr(df, window=14, calculator_type=\"talib\")</code></li> <li>\u8521\u91d1A/D\u7ebf(Chaikin A/D Line): <code>get_ad(df, calculator_type=\"talib\")</code></li> <li>\u8521\u91d1A/D\u632f\u8361\u5668(Chaikin A/D Oscillator): <code>get_adosc(df, fast_period=3, slow_period=10, calculator_type=\"talib\")</code></li> <li>\u80fd\u91cf\u6f6e(On Balance Volume): <code>get_obv(df, calculator_type=\"talib\")</code></li> <li>\u52a8\u91cf\u6307\u6807(Momentum): <code>get_mom(df, window=10, calculator_type=\"talib\")</code></li> <li>\u629b\u7269\u7ebf\u8f6c\u5411\u6307\u6807(Parabolic SAR): <code>get_sar(df, acceleration=0.02, maximum=0.2, calculator_type=\"talib\")</code></li> <li>\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b(Time Series Forecast): <code>get_tsf(df, window=14, calculator_type=\"talib\")</code></li> <li>\u7edd\u5bf9\u4ef7\u683c\u632f\u8361\u5668(Absolute Price Oscillator): <code>get_apo(df, fast_period=12, slow_period=26, ma_type=0, calculator_type=\"talib\")</code></li> <li>\u963f\u9686\u6307\u6807(Aroon): <code>get_aroon(df, window=14, calculator_type=\"talib\")</code></li> <li>\u963f\u9686\u632f\u8361\u5668(Aroon Oscillator): <code>get_aroonosc(df, window=14, calculator_type=\"talib\")</code></li> <li>\u5747\u52bf\u6307\u6807(Balance of Power): <code>get_bop(df, calculator_type=\"talib\")</code></li> <li>\u94b1\u5fb7\u52a8\u91cf\u632f\u8361\u5668(Chande Momentum Oscillator): <code>get_cmo(df, window=14, calculator_type=\"talib\")</code></li> <li>\u52a8\u5411\u6307\u6807(Directional Movement Index): <code>get_dx(df, window=14, calculator_type=\"talib\")</code></li> <li>\u8d44\u91d1\u6d41\u91cf\u6307\u6807(Money Flow Index): <code>get_mfi(df, window=14, calculator_type=\"talib\")</code></li> <li>\u8d1f\u65b9\u5411\u6307\u6807(-DI): <code>get_minus_di(df, window=14, calculator_type=\"talib\")</code></li> <li>\u8d1f\u65b9\u5411\u8fd0\u52a8(-DM): <code>get_minus_dm(df, window=14, calculator_type=\"talib\")</code></li> <li>\u6b63\u65b9\u5411\u6307\u6807(+DI): <code>get_plus_di(df, window=14, calculator_type=\"talib\")</code></li> <li>\u6b63\u65b9\u5411\u8fd0\u52a8(+DM): <code>get_plus_dm(df, window=14, calculator_type=\"talib\")</code></li> <li>\u4ef7\u683c\u632f\u8361\u5668\u767e\u5206\u6bd4(Percentage Price Oscillator): <code>get_ppo(df, fast_period=12, slow_period=26, ma_type=0, calculator_type=\"talib\")</code></li> <li>\u53d8\u52a8\u7387(Rate of change): <code>get_roc(df, window=10, calculator_type=\"talib\")</code></li> <li>\u53d8\u52a8\u7387\u767e\u5206\u6bd4(Rate of change Percentage): <code>get_rocp(df, window=10, calculator_type=\"talib\")</code></li> <li>\u53d8\u52a8\u7387\u6bd4\u7387(Rate of change ratio): <code>get_rocr(df, window=10, calculator_type=\"talib\")</code></li> <li>\u53d8\u52a8\u7387\u6bd4\u7387100\u523b\u5ea6(Rate of change ratio 100 scale): <code>get_rocr100(df, window=10, calculator_type=\"talib\")</code></li> <li>\u4e09\u91cd\u6307\u6570\u5e73\u6ed1\u5e73\u5747\u7ebf\u76841\u65e5\u53d8\u52a8\u7387(TRIX): <code>get_trix(df, window=30, calculator_type=\"talib\")</code></li> <li>\u7ec8\u6781\u632f\u8361\u5668(Ultimate Oscillator): <code>get_ultosc(df, window1=7, window2=14, window3=28, calculator_type=\"talib\")</code></li> </ul>"},{"location":"api/indicators/#_2","title":"\u793a\u4f8b","text":"<pre><code>from akshare_one import get_hist_data\nfrom akshare_one.indicators import get_sma, get_macd\n\n# \u83b7\u53d6\u5386\u53f2\u6570\u636e\ndf = get_hist_data(symbol=\"600000\", interval=\"day\")\n\n# \u8ba1\u7b9720\u65e5\u7b80\u5355\u79fb\u52a8\u5e73\u5747\ndf_sma = get_sma(df, window=20)\n\n# \u8ba1\u7b97MACD\u6307\u6807\ndf_macd = get_macd(df)\n</code></pre>"},{"location":"api/insider/","title":"\u5185\u90e8\u4ea4\u6613","text":"<p><code>get_inner_trade_data()</code> \u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u96ea\u7403\u5185\u90e8\u4ea4\u6613\u6570\u636e\u3002</p>"},{"location":"api/insider/#_2","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_inner_trade_data(symbol, **kwargs) -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/insider/#_3","title":"\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>symbol</code> str \u662f - \u80a1\u7968\u4ee3\u7801(\u5982: \"600000\") <code>source</code> str \u5426 \"xueqiu\" \u6570\u636e\u6e90(\u76ee\u524d\u652f\u6301\"xueqiu\")"},{"location":"api/insider/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de <code>pandas.DataFrame</code>\uff0c\u5305\u542b\u4ee5\u4e0b\u5217\uff1a</p> \u5217\u540d \u7c7b\u578b \u63cf\u8ff0 <code>symbol</code> str \u80a1\u7968\u4ee3\u7801 <code>issuer</code> str \u80a1\u7968\u540d\u79f0 <code>name</code> str \u53d8\u52a8\u4eba <code>title</code> str \u8463\u76d1\u9ad8\u804c\u52a1 <code>transaction_date</code> datetime \u53d8\u52a8\u65e5\u671f <code>transaction_shares</code> int \u53d8\u52a8\u80a1\u6570 <code>transaction_price_per_share</code> float \u6210\u4ea4\u5747\u4ef7 <code>shares_owned_after_transaction</code> int \u53d8\u52a8\u540e\u6301\u80a1\u6570 <code>relationship</code> str \u4e0e\u8463\u76d1\u9ad8\u5173\u7cfb <code>is_board_director</code> bool \u662f\u5426\u4e3a\u8463\u4e8b\u4f1a\u6210\u5458 <code>transaction_value</code> float \u4ea4\u6613\u91d1\u989d(\u53d8\u52a8\u80a1\u6570*\u6210\u4ea4\u5747\u4ef7) <code>shares_owned_before_transaction</code> int \u53d8\u52a8\u524d\u6301\u80a1\u6570"},{"location":"api/insider/#_5","title":"\u4f7f\u7528\u793a\u4f8b","text":"<pre><code>from akshare_one import get_inner_trade_data\n\n# \u83b7\u53d6\u6307\u5b9a\u80a1\u7968\u5185\u90e8\u4ea4\u6613\u6570\u636e\ndf = get_inner_trade_data(symbol=\"600000\")\nprint(df[[\"symbol\", \"name\", \"transaction_date\", \"transaction_value\"]].head())\n</code></pre>"},{"location":"api/news/","title":"\u65b0\u95fb\u6570\u636e","text":"<p><code>get_news_data()</code> \u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u4e2a\u80a1\u65b0\u95fb\u6570\u636e\u3002</p>"},{"location":"api/news/#_2","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_news_data(symbol, **kwargs) -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/news/#_3","title":"\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>symbol</code> str \u662f - \u80a1\u7968\u4ee3\u7801(\u5982: \"300059\") <code>source</code> str \u5426 \"eastmoney\" \u6570\u636e\u6e90(\u76ee\u524d\u4ec5\u652f\u6301\"eastmoney\")"},{"location":"api/news/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de <code>pandas.DataFrame</code>\uff0c\u5305\u542b\u4ee5\u4e0b\u5217\uff1a</p> \u5217\u540d \u7c7b\u578b \u63cf\u8ff0 <code>keyword</code> str \u5173\u952e\u8bcd <code>title</code> str \u65b0\u95fb\u6807\u9898 <code>content</code> str \u65b0\u95fb\u5185\u5bb9 <code>publish_time</code> datetime \u53d1\u5e03\u65f6\u95f4 <code>source</code> str \u6587\u7ae0\u6765\u6e90 <code>url</code> str \u65b0\u95fb\u94fe\u63a5"},{"location":"api/news/#_5","title":"\u4f7f\u7528\u793a\u4f8b","text":"<pre><code>from akshare_one import get_news_data\n\n# \u83b7\u53d6\u4e2a\u80a1\u65b0\u95fb\u6570\u636e\ndf = get_news_data(symbol=\"300059\")\nprint(df[[\"title\", \"publish_time\", \"source\"]].head())\n</code></pre>"},{"location":"api/overview/","title":"API \u6982\u89c8","text":"<p>AKShare One \u63d0\u4f9b\u4e86\u4e00\u5957\u7b80\u6d01\u7edf\u4e00\u7684 API \u63a5\u53e3\uff0c\u7528\u4e8e\u83b7\u53d6\u4e2d\u56fd\u91d1\u878d\u5e02\u573a\u7684\u5404\u7c7b\u6570\u636e\u3002\u6240\u6709\u63a5\u53e3\u90fd\u7ecf\u8fc7\u7cbe\u5fc3\u8bbe\u8ba1\uff0c\u5177\u6709\u4e00\u81f4\u7684\u53c2\u6570\u683c\u5f0f\u548c\u8fd4\u56de\u7ed3\u6784\u3002</p>"},{"location":"api/overview/#_1","title":"\ud83c\udfd7\ufe0f \u8bbe\u8ba1\u539f\u5219","text":""},{"location":"api/overview/#_2","title":"\u7edf\u4e00\u7684\u53c2\u6570\u683c\u5f0f","text":"<ul> <li>symbol: \u80a1\u7968\u4ee3\u7801\uff0c\u7edf\u4e00\u4f7f\u75286\u4f4d\u6570\u5b57\u683c\u5f0f\uff08\u5982 \"600000\"\uff09</li> <li>source: \u6570\u636e\u6e90\u9009\u62e9\uff0c\u652f\u6301\u591a\u4e2a\u6570\u636e\u63d0\u4f9b\u5546</li> <li>\u65f6\u95f4\u53c2\u6570: \u7edf\u4e00\u4f7f\u7528 ISO \u683c\u5f0f\u65e5\u671f\u5b57\u7b26\u4e32</li> </ul>"},{"location":"api/overview/#_3","title":"\u6807\u51c6\u5316\u8fd4\u56de\u683c\u5f0f","text":"<p>\u6240\u6709\u63a5\u53e3\u8fd4\u56de <code>pandas.DataFrame</code> \u683c\u5f0f\uff0c\u5305\u542b\uff1a - \u7edf\u4e00\u7684\u5217\u540d\u89c4\u8303 - \u4e00\u81f4\u7684\u6570\u636e\u7c7b\u578b</p>"},{"location":"api/overview/#_4","title":"\ud83d\udcca \u6570\u636e\u6e90\u652f\u6301","text":"\u6570\u636e\u6e90 \u6807\u8bc6\u7b26 \u652f\u6301\u7684\u63a5\u53e3 \u7279\u70b9 \u4e1c\u65b9\u8d22\u5bcc <code>eastmoney</code> \u5386\u53f2\u6570\u636e\u3001\u5b9e\u65f6\u6570\u636e\u3001\u57fa\u7840\u4fe1\u606f\u3001\u8d22\u52a1\u6570\u636e\u3001\u65b0\u95fb\u6570\u636e \u8c03\u7528AKShare\uff0c\u66f4\u65b0\u53ca\u65f6 \u4e1c\u65b9\u8d22\u5bcc\u76f4\u8fde <code>eastmoney_direct</code> \u5386\u53f2\u6570\u636e\u3001\u5b9e\u65f6\u6570\u636e\u3001\u8d22\u52a1\u6570\u636e \u652f\u6301A\u80a1\u3001B\u80a1\u3001\u6e2f\u80a1 \u65b0\u6d6a\u8d22\u7ecf <code>sina</code> \u5386\u53f2\u6570\u636e\u3001\u8d22\u52a1\u6570\u636e \u8c03\u7528AKShare\uff0c\u66f4\u65b0\u53ca\u65f6 \u96ea\u7403 <code>xueqiu</code> \u5b9e\u65f6\u6570\u636e\u3001\u5185\u90e8\u4ea4\u6613 \u8c03\u7528AKShare\uff0c\u66f4\u65b0\u53ca\u65f6"},{"location":"api/overview/#_5","title":"\ud83d\udd27 \u6838\u5fc3\u6a21\u5757","text":""},{"location":"api/overview/#_6","title":"\u5386\u53f2\u6570\u636e\u6a21\u5757","text":"<p>\u83b7\u53d6\u80a1\u7968\u7684\u5386\u53f2\u884c\u60c5\u6570\u636e\uff0c\u652f\u6301\u591a\u79cd\u65f6\u95f4\u7c92\u5ea6\u548c\u590d\u6743\u65b9\u5f0f\u3002</p> <pre><code>from akshare_one import get_hist_data\n</code></pre>"},{"location":"api/overview/#_7","title":"\u5b9e\u65f6\u6570\u636e\u6a21\u5757","text":"<p>\u83b7\u53d6\u80a1\u7968\u7684\u5b9e\u65f6\u884c\u60c5\u6570\u636e\uff0c\u5305\u62ec\u4ef7\u683c\u3001\u6210\u4ea4\u91cf\u7b49\u4fe1\u606f\u3002</p> <pre><code>from akshare_one import get_realtime_data\n</code></pre>"},{"location":"api/overview/#_8","title":"\u57fa\u7840\u4fe1\u606f\u6a21\u5757","text":"<p>\u83b7\u53d6\u80a1\u7968\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5982\u516c\u53f8\u540d\u79f0\u3001\u884c\u4e1a\u5206\u7c7b\u3001\u4e0a\u5e02\u65f6\u95f4\u7b49\u3002</p> <pre><code>from akshare_one import get_basic_info\n</code></pre>"},{"location":"api/overview/#_9","title":"\u65b0\u95fb\u6570\u636e\u6a21\u5757","text":"<p>\u83b7\u53d6\u4e0e\u7279\u5b9a\u80a1\u7968\u76f8\u5173\u7684\u65b0\u95fb\u8d44\u8baf\u3002</p> <pre><code>from akshare_one import get_news_data\n</code></pre>"},{"location":"api/overview/#_10","title":"\u8d22\u52a1\u6570\u636e\u6a21\u5757","text":"<p>\u83b7\u53d6\u4e0a\u5e02\u516c\u53f8\u7684\u8d22\u52a1\u62a5\u8868\u6570\u636e\uff0c\u5305\u62ec\u8d44\u4ea7\u8d1f\u503a\u8868\u3001\u5229\u6da6\u8868\u3001\u73b0\u91d1\u6d41\u91cf\u8868\u7b49\u3002</p> <pre><code>from akshare_one import (\n    get_balance_sheet,\n    get_income_statement, \n    get_cash_flow,\n    get_financial_metrics\n)\n</code></pre>"},{"location":"api/overview/#_11","title":"\u5185\u90e8\u4ea4\u6613\u6a21\u5757","text":"<p>\u83b7\u53d6\u4e0a\u5e02\u516c\u53f8\u5185\u90e8\u4eba\u5458\u7684\u4ea4\u6613\u6570\u636e\u3002</p> <pre><code>from akshare_one import get_inner_trade_data\n</code></pre>"},{"location":"api/overview/#_12","title":"\u6280\u672f\u6307\u6807\u6a21\u5757","text":"<p>\u63d0\u4f9b\u4e30\u5bcc\u7684\u6280\u672f\u5206\u6790\u6307\u6807\u8ba1\u7b97\u529f\u80fd\u3002</p> <pre><code>from akshare_one.indicators import (\n    get_sma, get_ema, get_rsi, get_macd, \n    get_bollinger_bands, get_stoch\n)\n</code></pre>"},{"location":"api/overview/#_13","title":"\ud83d\ude80 \u5feb\u901f\u5bfc\u822a","text":"<ul> <li>\u5386\u53f2\u6570\u636e - \u83b7\u53d6\u80a1\u7968\u5386\u53f2\u884c\u60c5\u6570\u636e</li> <li>\u5b9e\u65f6\u6570\u636e - \u83b7\u53d6\u80a1\u7968\u5b9e\u65f6\u884c\u60c5\u6570\u636e  </li> <li>\u57fa\u7840\u4fe1\u606f - \u83b7\u53d6\u80a1\u7968\u57fa\u7840\u4fe1\u606f</li> <li>\u65b0\u95fb\u6570\u636e - \u83b7\u53d6\u4e2a\u80a1\u65b0\u95fb\u6570\u636e</li> <li>\u8d22\u52a1\u6570\u636e - \u83b7\u53d6\u8d22\u52a1\u62a5\u8868\u6570\u636e</li> <li>\u5185\u90e8\u4ea4\u6613 - \u83b7\u53d6\u5185\u90e8\u4ea4\u6613\u6570\u636e</li> <li>\u6280\u672f\u6307\u6807 - \u6280\u672f\u5206\u6790\u6307\u6807</li> </ul>"},{"location":"api/overview/#_14","title":"\ud83d\udca1 \u4f7f\u7528\u5efa\u8bae","text":"<ul> <li>\u5408\u7406\u8bbe\u7f6e\u65f6\u95f4\u8303\u56f4\uff0c\u907f\u514d\u83b7\u53d6\u8fc7\u591a\u4e0d\u5fc5\u8981\u7684\u6570\u636e</li> <li>\u5229\u7528\u5185\u7f6e\u7f13\u5b58\u673a\u5236\uff0c\u907f\u514d\u91cd\u590d\u8bf7\u6c42\u76f8\u540c\u6570\u636e</li> <li>\u6ce8\u610f\u8bbf\u95ee\u9891\u7387\uff0c\u907f\u514d\u89e6\u53d1\u63a5\u53e3\u9650\u6d41\u673a\u5236</li> </ul>"},{"location":"api/realtime/","title":"\u5b9e\u65f6\u6570\u636e","text":"<p><code>get_realtime_data()</code> \u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u80a1\u7968\u5b9e\u65f6\u884c\u60c5\u6570\u636e\u3002</p>"},{"location":"api/realtime/#_2","title":"\u51fd\u6570\u7b7e\u540d","text":"<pre><code>def get_realtime_data(symbol=None, **kwargs) -&gt; pd.DataFrame\n</code></pre>"},{"location":"api/realtime/#_3","title":"\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>symbol</code> str \u5426 None \u80a1\u7968\u4ee3\u7801(\u5982: \"600000\")\uff0c\u4e0d\u4f20\u5219\u8fd4\u56de\u6240\u6709\u80a1\u7968 <code>source</code> str \u5426 \"xueqiu\" \u6570\u636e\u6e90(\"eastmoney\", \"eastmoney_direct\", \"xueqiu\") <p>\u91cd\u8981\u63d0\u793a</p> <p>\u4f7f\u7528 <code>xueqiu</code> \u6570\u636e\u6e90\u65f6\uff0c\u5fc5\u987b\u63d0\u4f9b <code>symbol</code> \u53c2\u6570</p> <p>\u6570\u636e\u6e90\u7279\u6027</p> <ul> <li><code>eastmoney_direct</code> \u6570\u636e\u6e90\u652f\u6301\u6e2f\u80a1\uff0c\u5982 \"00700\" \u8868\u793a\u817e\u8baf\u63a7\u80a1</li> <li><code>eastmoney</code> \u6570\u636e\u6e90\u4f1a\u83b7\u53d6\u6240\u6709\u80a1\u7968\u7684\u5b9e\u65f6\u6570\u636e\uff0c\u4e2a\u80a1\u8bf7\u4f7f\u7528 <code>eastmoney_direct</code> \u6216\u8005 <code>xueqiu</code></li> </ul>"},{"location":"api/realtime/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de <code>pandas.DataFrame</code>\uff0c\u5305\u542b\u4ee5\u4e0b\u5217\uff1a</p> \u5217\u540d \u7c7b\u578b \u63cf\u8ff0 <code>symbol</code> str \u80a1\u7968\u4ee3\u7801 <code>price</code> float \u6700\u65b0\u4ef7 <code>change</code> float \u6da8\u8dcc\u989d <code>pct_change</code> float \u6da8\u8dcc\u5e45(%) <code>timestamp</code> datetime \u65f6\u95f4\u6233 <code>volume</code> int \u6210\u4ea4\u91cf(\u624b) <code>amount</code> float \u6210\u4ea4\u989d(\u5143) <code>open</code> float \u4eca\u5f00 <code>high</code> float \u6700\u9ad8 <code>low</code> float \u6700\u4f4e <code>prev_close</code> float \u6628\u6536"},{"location":"api/realtime/#_5","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/realtime/#_6","title":"\u83b7\u53d6\u6240\u6709\u80a1\u7968\u5b9e\u65f6\u6570\u636e","text":"<pre><code>from akshare_one import get_realtime_data\n\n# \u83b7\u53d6\u6240\u6709\u80a1\u7968\u5b9e\u65f6\u6570\u636e\uff08\u4f7f\u7528\u4e1c\u65b9\u8d22\u5bcc\u6570\u636e\u6e90\uff09\ndf_all = get_realtime_data(source=\"eastmoney\")\nprint(f\"\u5171\u83b7\u53d6 {len(df_all)} \u53ea\u80a1\u7968\u6570\u636e\")\nprint(df_all.head())\n</code></pre>"},{"location":"api/realtime/#_7","title":"\u83b7\u53d6\u5355\u53ea\u80a1\u7968\u5b9e\u65f6\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u6d66\u53d1\u94f6\u884c\u5b9e\u65f6\u6570\u636e\ndf_single = get_realtime_data(symbol=\"600000\")\nprint(df_single)\n\n# \u67e5\u770b\u5177\u4f53\u6570\u636e\nif not df_single.empty:\n    latest = df_single.iloc[0]\n    print(f\"\u80a1\u7968\u4ee3\u7801: {latest['symbol']}\")\n    print(f\"\u6700\u65b0\u4ef7: {latest['price']}\")\n    print(f\"\u6da8\u8dcc\u5e45: {latest['pct_change']:.2f}%\")\n    print(f\"\u6210\u4ea4\u91cf: {latest['volume']} \u624b\")\n</code></pre>"},{"location":"api/realtime/#_8","title":"\u83b7\u53d6\u6e2f\u80a1\u5b9e\u65f6\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u817e\u8baf\u63a7\u80a1\u6e2f\u80a1\u5b9e\u65f6\u6570\u636e\ndf_hk = get_realtime_data(\n    symbol=\"00700\", \n    source=\"eastmoney_direct\"\n)\nprint(df_hk)\n</code></pre>"},{"location":"api/realtime/#_9","title":"\u6279\u91cf\u83b7\u53d6\u591a\u53ea\u80a1\u7968\u6570\u636e","text":"<pre><code># \u5b9a\u4e49\u80a1\u7968\u5217\u8868\nsymbols = [\"600000\", \"000001\", \"000002\", \"600036\", \"600519\"]\n\n# \u6279\u91cf\u83b7\u53d6\u5b9e\u65f6\u6570\u636e\nrealtime_data = []\nfor symbol in symbols:\n    df = get_realtime_data(symbol=symbol, source=\"eastmoney_direct\")\n    if not df.empty:\n        realtime_data.append(df)\n\n# \u5408\u5e76\u6240\u6709\u6570\u636e\nif realtime_data:\n    import pandas as pd\n    combined_df = pd.concat(realtime_data, ignore_index=True)\n    print(combined_df[[\"symbol\", \"price\", \"pct_change\"]])\n</code></pre>"}]}